version: '3.8'

services:
  diarize:
    #command: tail -f /dev/null
    command: ['python3','diarize.py']

    # build:
    #   context: docker
    #   dockerfile: DiarizeDockerfile
    image: diarize:0.2
    restart: unless-stopped
    runtime: nvidia
    volumes:
    - .:/usr/src/app
    - ${DATA_PATH}/audio:/audio
    - ${DATA_PATH}/logs:/logs
    - /var/run/docker.sock:/var/run/docker.sock


    depends_on:
      - qdrant

  transcribe:
    command: ['python3','transcribe.py']
    #command: tail -f /dev/null

    # build:
      # context: docker
      # dockerfile: TranscribeDockerfile
    image: transcribe:0.1
    restart: unless-stopped
    runtime: nvidia
    volumes:
    - .:/usr/src/app
    - ${DATA_PATH}/audio:/audio
    - ${DATA_PATH}/logs:/logs
    - /var/run/docker.sock:/var/run/docker.sock

  audio:
    #command: tail -f /dev/null
    command: ['python','process_connections.py']

    #build: 
      # context: docker
      # dockerfile: MainDockerfile
    image: audio:0.2
    restart: unless-stopped
    runtime: nvidia
    volumes:
    - .:/usr/src/app
    - ${DATA_PATH}/audio:/audio
    - ${DATA_PATH}/logs:/logs
    - /var/run/docker.sock:/var/run/docker.sock

    extra_hosts:
       - "host.docker.internal:host-gateway" #to connect to host port - stream queue. Will be remote host

  
  qdrant:
    image: qdrant/qdrant
    volumes:
      - ${DATA_PATH}/qdrant:/qdrant/data
    restart: unless-stopped


  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "${AUDIO_REDIS_PORT}:6379" #needs to be exposed outside for remote connection of the main server
    volumes:
    - ${DATA_PATH}/docker_redis_audio:/data


 #docker compose -f /home/dima/0/1_audio/docker-compose.yml -p 01 up -d