version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant
    restart: unless-stopped
    volumes:
      - ${VOLUME_DATA_PATH}/qdrant:/qdrant/storage

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "${REDIS_IMAGE_PORT}:6379"
    volumes:
      - ${VOLUME_DATA_PATH}/docker_redis_audio:/data

  diarize:
    depends_on:
      - qdrant
    command: tail -f /dev/null
    #command: ['python3','diarize.py']

    # build:
    #   context: docker
    #   dockerfile: DiarizeDockerfile #add ffmpeg to Dockerfile
    image: diarize:0.3
    restart: unless-stopped
    runtime: nvidia
    volumes:
      - .:/usr/src/app
      - ../library:/usr/src/library
      - ${VOLUME_DATA_PATH}/audio:/audio
      - ${VOLUME_DATA_PATH}/logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock


  transcribe:
    #command: ['python3','transcribe.py']
    command: tail -f /dev/null

    #build:
      # context: docker
      # dockerfile: TranscribeDockerfile
      ### error  libcublas.so.12 is not found or cannot be loaded
    image: transcribe:0.2
    restart: unless-stopped
    runtime: nvidia
    volumes:
      - .:/usr/src/app
      - ../library:/usr/src/library
      - ${VOLUME_DATA_PATH}/audio:/audio
      - ${VOLUME_DATA_PATH}/logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock

  api:
    #image: audio_api
    restart: unless-stopped
    build: 
      context: docker
      dockerfile: MainDockerfile
    ports:
      - "${SERVICE_API_PORT}:${SERVICE_API_PORT}"
    depends_on:
      - redis
    environment:
      CHECK_AND_PROCESS_CONNECTIONS_INTERVAL_SEC: ${CHECK_AND_PROCESS_CONNECTIONS_INTERVAL_SEC}

      SERVICE_VERSION: ${SERVICE_VERSION}
      SERVICE_NAME: ${SERVICE_NAME}
      SERVICE_API_HOST: ${SERVICE_API_HOST}
      SERVICE_API_PORT: ${SERVICE_API_PORT}
      SERVICE_TOKEN: ${SERVICE_TOKEN}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      STREAM_QUEUE_SERVICE_LIST_CONNECTIONS: ${STREAM_QUEUE_SERVICE_LIST_CONNECTIONS}
      STREAM_QUEUE_SERVICE_GET_NEXT_CHUNKS: ${STREAM_QUEUE_SERVICE_GET_NEXT_CHUNKS}
      STREAM_QUEUE_SERVICE_HEALTH: ${STREAM_QUEUE_SERVICE_HEALTH}
      STREAM_QUEUE_SERVICE_HEALTH_CHECK: ${STREAM_QUEUE_SERVICE_HEALTH_CHECK}
      STREAM_QUEUE_SERVICE_REQUEST_TIMEOUT: ${STREAM_QUEUE_SERVICE_REQUEST_TIMEOUT}
      STREAM_QUEUE_SERVICE_AUTH_TOKEN: ${STREAM_QUEUE_SERVICE_AUTH_TOKEN}

    #command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "${SERVICE_API_PORT}", "--reload"]
    command: tail -f /dev/null
    extra_hosts:
      - "host.docker.internal:host-gateway" # to connect to host ports
    volumes:
      - .:/usr/src/app
      - ../library:/usr/src/library
      - ${VOLUME_DATA_PATH}/audio:/audio
