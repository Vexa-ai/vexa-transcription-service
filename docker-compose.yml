version: '3.8'

services:
  diarize:
    #command: tail -f /dev/null
    command: ['python3','diarize.py']

    build:
      context: docker
      dockerfile: DiarizeDockerfile
    #image: diarize:0.2
    restart: unless-stopped
    runtime: nvidia
    volumes:
    - .:/usr/src/app
    - ../library:/usr/src/library
    - ${DATA_PATH}/audio:/audio
    - ${DATA_PATH}/logs:/logs
    - /var/run/docker.sock:/var/run/docker.sock



    depends_on:
      - qdrant

  transcribe:
    command: ['python3','transcribe.py']
    #command: tail -f /dev/null

    #build:
      # context: docker
      # dockerfile: TranscribeDockerfile
      ### error  libcublas.so.12 is not found or cannot be loaded
    image: transcribe:0.1
    restart: unless-stopped
    runtime: nvidia
    volumes:
    - .:/usr/src/app
    - ../library:/usr/src/library
    - ${DATA_PATH}/audio:/audio
    - ${DATA_PATH}/logs:/logs
    - /var/run/docker.sock:/var/run/docker.sock

  audio:
    #command: tail -f /dev/null
    command: ['python','process_connections.py']

    build:
      context: docker
      dockerfile: MainDockerfile
    #image: audio:0.2
    restart: unless-stopped
    runtime: nvidia
    volumes:
    - .:/usr/src/app
    - ../library:/usr/src/library
    - ${DATA_PATH}/audio:/audio
    - ${DATA_PATH}/logs:/logs
    - /var/run/docker.sock:/var/run/docker.sock

    extra_hosts:
       - "host.docker.internal:host-gateway" #to connect to host port - stream queue. Will be remote host


  qdrant:
    image: qdrant/qdrant
    volumes:

    - ${DATA_PATH}/qdrant:/qdrant/storage

    restart: unless-stopped


  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "${AUDIO_REDIS_PORT}:6379" #needs to be exposed outside for remote connection of the main server
    volumes:
    - ${DATA_PATH}/docker_redis_audio:/data


  api:
    #image: stream_api
    build: 
      context: docker
      dockerfile: MainDockerfile
    ports:
      - "${AUDIO_API_PORT}:${AUDIO_API_PORT}"
    depends_on:
      - redis
    environment:
      SERVICE_VERSION: ${SERVICE_VERSION}
      SERVICE_NAME: ${SERVICE_NAME}
      AUDIO_API_HOST: ${AUDIO_API_HOST}
      AUDIO_API_PORT: ${AUDIO_API_PORT}
      SERVICE_TOKEN: ${SERVICE_TOKEN}
      DATA_PATH: ${DATA_PATH}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      STREAM_QUEUE_SERVICE_LIST_CONNECTIONS: ${STREAM_QUEUE_SERVICE_LIST_CONNECTIONS}
      STREAM_QUEUE_SERVICE_FLUSH_CACHE: ${STREAM_QUEUE_SERVICE_FLUSH_CACHE}
      STREAM_QUEUE_SERVICE_GET_NEXT_CHUNKS: ${STREAM_QUEUE_SERVICE_GET_NEXT_CHUNKS}
      STREAM_QUEUE_SERVICE_HEALTH: ${STREAM_QUEUE_SERVICE_HEALTH}
      STREAM_QUEUE_SERVICE_HEALTH_CHECK: ${STREAM_QUEUE_SERVICE_HEALTH_CHECK}
      STREAM_QUEUE_SERVICE_REQUEST_TIMEOUT: ${STREAM_QUEUE_SERVICE_REQUEST_TIMEOUT}
      STREAM_QUEUE_SERVICE_AUTH_TOKEN: ${STREAM_QUEUE_SERVICE_AUTH_TOKEN}

    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "${AUDIO_API_PORT}", "--reload"]
    #command: tail -f /dev/null
    volumes:
      - .:/usr/src/app
      - ../library:/usr/src/library
    restart: unless-stopped

    extra_hosts:
        - "host.docker.internal:host-gateway"
