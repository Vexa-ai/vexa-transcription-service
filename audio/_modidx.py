# Autogenerated by nbdev

d = { 'settings': { 'branch': '{branch}',
                'doc_baseurl': '/audio/',
                'doc_host': 'https://{user}.github.io',
                'git_url': 'https://github.com/{user}/audio/tree/{branch}/',
                'lib_path': 'audio'},
  'syms': { 'audio.audio': { 'audio.audio.AudioSlicer': ('audio.html#audioslicer', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.__init__': ('audio.html#audioslicer.__init__', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.append': ('audio.html#audioslicer.append', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.export2file': ('audio.html#audioslicer.export2file', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.export_data': ('audio.html#audioslicer.export_data', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.from_ffmpeg_slice': ('audio.html#audioslicer.from_ffmpeg_slice', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.from_file': ('audio.html#audioslicer.from_file', 'audio/audio.py'),
                             'audio.audio.AudioSlicer.slice': ('audio.html#audioslicer.slice', 'audio/audio.py'),
                             'audio.audio.writestream2file': ('audio.html#writestream2file', 'audio/audio.py')},
            'audio.diarize': {'audio.diarize.get_redis': ('01.diarize.html#get_redis', 'audio/diarize.py')},
            'audio.diarize_transcribe': { 'audio.diarize_transcribe.Notification': ( 'audio_processor_from_file.html#notification',
                                                                                     'audio/diarize_transcribe.py'),
                                          'audio.diarize_transcribe.Notification.initialize': ( 'audio_processor_from_file.html#notification.initialize',
                                                                                                'audio/diarize_transcribe.py'),
                                          'audio.diarize_transcribe.Notification.wait': ( 'audio_processor_from_file.html#notification.wait',
                                                                                          'audio/diarize_transcribe.py'),
                                          'audio.diarize_transcribe.diarize': ( 'audio_processor_from_file.html#diarize',
                                                                                'audio/diarize_transcribe.py'),
                                          'audio.diarize_transcribe.transcribe': ( 'audio_processor_from_file.html#transcribe',
                                                                                   'audio/diarize_transcribe.py')},
            'audio.lib': { 'audio.lib.average_embeddings': ('00.html#average_embeddings', 'audio/lib.py'),
                           'audio.lib.get_inner_redis': ('00.html#get_inner_redis', 'audio/lib.py'),
                           'audio.lib.list_directory_contents': ('00.html#list_directory_contents', 'audio/lib.py'),
                           'audio.lib.log': ('00.html#log', 'audio/lib.py'),
                           'audio.lib.pairwise_cosine_similarity': ('00.html#pairwise_cosine_similarity', 'audio/lib.py'),
                           'audio.lib.path_info': ('00.html#path_info', 'audio/lib.py')},
            'audio.process': { 'audio.process.diarize': ('audio_processor_from_file.html#diarize', 'audio/process.py'),
                               'audio.process.get_next_chunk_start': ( 'audio_processor_from_file.html#get_next_chunk_start',
                                                                       'audio/process.py'),
                               'audio.process.transcribe': ('audio_processor_from_file.html#transcribe', 'audio/process.py')},
            'audio.psql': { 'audio.psql.SpeakerEmbs': ('00.psql.html#speakerembs', 'audio/psql.py'),
                            'audio.psql.Speakers': ('00.psql.html#speakers', 'audio/psql.py'),
                            'audio.psql.engine_execute': ('00.psql.html#engine_execute', 'audio/psql.py'),
                            'audio.psql.query2df': ('00.psql.html#query2df', 'audio/psql.py')},
            'audio.redis': { 'audio.redis.ApiConnection': ('redis.html#apiconnection', 'audio/redis.py'),
                             'audio.redis.ApiConnection.__init__': ('redis.html#apiconnection.__init__', 'audio/redis.py'),
                             'audio.redis.ApiConnection.check_open': ('redis.html#apiconnection.check_open', 'audio/redis.py'),
                             'audio.redis.ApiConnection.delete': ('redis.html#apiconnection.delete', 'audio/redis.py'),
                             'audio.redis.ApiConnection.enqueue': ('redis.html#apiconnection.enqueue', 'audio/redis.py'),
                             'audio.redis.ApiConnection.get_all_queue': ('redis.html#apiconnection.get_all_queue', 'audio/redis.py'),
                             'audio.redis.ApiConnection.get_queue_length': ('redis.html#apiconnection.get_queue_length', 'audio/redis.py'),
                             'audio.redis.ApiConnection.pop_multiple': ('redis.html#apiconnection.pop_multiple', 'audio/redis.py'),
                             'audio.redis.ApiConnection.set_closed': ('redis.html#apiconnection.set_closed', 'audio/redis.py'),
                             'audio.redis.ApiConnection.set_open': ('redis.html#apiconnection.set_open', 'audio/redis.py'),
                             'audio.redis.ApiConnection.set_update': ('redis.html#apiconnection.set_update', 'audio/redis.py'),
                             'audio.redis.Audio': ('redis.html#audio', 'audio/redis.py'),
                             'audio.redis.Audio.__init__': ('redis.html#audio.__init__', 'audio/redis.py'),
                             'audio.redis.Data': ('redis.html#data', 'audio/redis.py'),
                             'audio.redis.Data.delete': ('redis.html#data.delete', 'audio/redis.py'),
                             'audio.redis.Data.get': ('redis.html#data.get', 'audio/redis.py'),
                             'audio.redis.Data.save': ('redis.html#data.save', 'audio/redis.py'),
                             'audio.redis.Diarisation': ('redis.html#diarisation', 'audio/redis.py'),
                             'audio.redis.Diarisation.__init__': ('redis.html#diarisation.__init__', 'audio/redis.py'),
                             'audio.redis.StreamItem': ('redis.html#streamitem', 'audio/redis.py'),
                             'audio.redis.StreamItem.dump': ('redis.html#streamitem.dump', 'audio/redis.py'),
                             'audio.redis.StreamItem.load': ('redis.html#streamitem.load', 'audio/redis.py'),
                             'audio.redis.Transcript': ('redis.html#transcript', 'audio/redis.py'),
                             'audio.redis.Transcript.__init__': ('redis.html#transcript.__init__', 'audio/redis.py'),
                             'audio.redis.get_connections': ('redis.html#get_connections', 'audio/redis.py'),
                             'audio.redis.get_connections_df': ('redis.html#get_connections_df', 'audio/redis.py'),
                             'audio.redis.get_inner_redis': ('redis.html#get_inner_redis', 'audio/redis.py'),
                             'audio.redis.get_redis': ('redis.html#get_redis', 'audio/redis.py'),
                             'audio.redis.log': ('redis.html#log', 'audio/redis.py'),
                             'audio.redis.start_process_audio_file': ('redis.html#start_process_audio_file', 'audio/redis.py')}}}
